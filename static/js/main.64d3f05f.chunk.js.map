{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","className","onSubmit","event","preventDefault","update","type","placeholder","value","required","onChange","target","onClick","src","alt","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","key","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","get","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64d3f05f.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const firebaseInstance = firebase\r\nexport const authService = firebase.auth()\r\nexport const dbService = firebase.firestore()\r\nexport const storageService = firebase.storage()\r\n","import React, { useState } from \"react\"\r\nimport { dbService, storageService } from \"fbase\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\")\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete()\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete()\r\n        }\r\n    }\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev)\r\n    }\r\n    const onSubmit = (event) => {\r\n        event.preventDefault()\r\n        dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        })\r\n        toggleEditing()\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setNewNweet(value)\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            onChange={onChange}\r\n                        ></input>\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=\"설명\"></img>}\r\n                    {isOwner && (\r\n                        <>\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nweet\r\n","import { dbService, storageService } from \"fbase\"\r\nimport React, { useState } from \"react\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\")\r\n    const [attachment, setAttachment] = useState(\"\")\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return\r\n        }\r\n        event.preventDefault()\r\n        let attachmentUrl = \"\"\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n            const response = await attachmentRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await response.ref.getDownloadURL()\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj)\r\n        setNweet(\"\")\r\n        setAttachment(\"\")\r\n        // 초기화시키면 input의 value에 작성되었던 텍스트가 남아있지 않겠지\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setNweet(value)\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event\r\n        const theFile = files[0]\r\n        const reader = new FileReader()\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile)\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\")\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        alt=\"설명\"\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\nexport default NweetFactory\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { dbService } from \"fbase\"\r\nimport Nweet from \"components/Nweet\"\r\n\r\nimport NweetFactory from \"components/NweetFactory\"\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([])\r\n\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                const nweetArray = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }))\r\n                setNweets(nweetArray)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => {\r\n                    return (\r\n                        <Nweet\r\n                            key={nweet.id}\r\n                            nweetObj={nweet}\r\n                            isOwner={nweet.creatorId === userObj.uid}\r\n                        ></Nweet>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { authService } from \"fbase\"\r\nimport React, { useState } from \"react\"\r\n\r\nexport default function AuthForm() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [newAccount, setNewAccount] = useState(true)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const toggleAccount = () => {\r\n        // 이 함수는 newAccount(계정존재여부)를 토글한다.\r\n        setNewAccount((prev) => !prev)\r\n    }\r\n    const onChange = (event) => {\r\n        // onChange 함수를 하나만 사용해서 form을 반응시켜라\r\n        const {\r\n            target: { name, value },\r\n        } = event\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === \"password\") {\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(email, password)\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                ></input>\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                ></input>\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create New Account\" : \"Login\"}\r\n                    className=\"authInput authSubmit\"\r\n                ></input>\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                테스트용\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n","import AuthForm from \"components/AuthForm\"\r\nimport { authService, firebaseInstance } from \"fbase\"\r\nimport React from \"react\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\"\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event\r\n        let provider\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider()\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider()\r\n        }\r\n        await authService.signInWithPopup(provider)\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { authService, dbService } from \"fbase\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n    // -- hooks --\r\n    const history = useHistory()\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n\r\n    // -- user Update function --\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\")\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName })\r\n        }\r\n        refreshUser()\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setNewDisplayName(value)\r\n    }\r\n    // -- Nweet List function --\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get()\r\n        // console.log(nweets.docs.map((doc) => doc.data()))\r\n    }\r\n\r\n    // -- state변화 감지 --\r\n    useEffect(() => {\r\n        getMyNweets()\r\n    }, [])\r\n\r\n    // DOM 출력\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    onChange={onChange}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{ marginTop: 10 }}\r\n                />\r\n            </form>\r\n            <span onClick={onLogOutClick} className=\"formBtn cancelBtn logOut\">\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)\r\nexport default Navigation\r\n","import React from \"react\"\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport Home from \"routes/Home\"\r\nimport Auth from \"routes/Auth\"\r\nimport Profile from \"routes/Profile\"\r\nimport Navigation from \"./Navigation\"\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}></Navigation>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}></Home>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}></Profile>\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth></Auth>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React, { useEffect, useState } from \"react\"\nimport AppRouter from \"components/Router\"\nimport { authService } from \"fbase\"\n\nfunction App() {\n    const [init, setInit] = useState(false)\n    const [userObj, setUserObj] = useState(null)\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                })\n                // userObj설정\n            } else {\n                setUserObj(null)\n                // 로그아웃\n            }\n            setInit(true)\n        })\n    }, [])\n\n    // 유저명 업데이트 함수 -------------------------------------\n    const refreshUser = () => {\n        const user = authService.currentUser\n        // user는 로그인한 사용자 정보를 가져오고, 로그인 아니면 null한다\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        })\n    }\n\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                    refreshUser={refreshUser}\n                ></AppRouter>\n            ) : (\n                \"initializing...\"\n            )}\n        </>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport \"./style.css\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}